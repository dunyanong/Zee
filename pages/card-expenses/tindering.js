import React, { useState } from "react";
import Head from "next/head";
import OtherCategories from "../../components/OtherCategories";
import Card from "../../components/Card";
import EXPENSE from "../../data/expense";
import CARDS from "../../data/cards";
import { AnimatePresence } from "framer-motion";
import TinderCard from "../../components/TinderCard";
import TotalSpend from "../../components/TotalSpend";
// import ModalUsage from "../../components/Modal";

import {
  Modal,
  ModalOverlay,
  ModalContent,
  ModalHeader,
  ModalFooter,
  ModalBody,
  ModalCloseButton,
  useDisclosure,
  Button,
} from "@chakra-ui/react";
import Link from "next/link";

function CardExpenses() {
  const [expense, setExpense] = useState(EXPENSE);
  const [cards, setCards] = useState(CARDS);
  const [result, setResult] = useState({
    like: 0,
    nope: 0,
    superlike: 0,
  });
  const [history, setHistory] = useState([]);
  // index of last card
  const activeIndex = cards.length - 1;

  const removeCard = (oldCard, swipe) => {
    setHistory((current) => [...current, { ...oldCard, swipe }]);
    setCards((current) =>
      current.filter((card) => {
        return card.id !== oldCard.id;
      })
    );
    setResult((current) => ({ ...current, [swipe]: current[swipe] + 1 }));
  };

  const clickToRemove = () => {
    setCards((current) =>
      current.filter((card) => {
        return card.id !== cards.length - 1;
      })
    );
  }

  const undoSwipe = () => {
    const newCard = history.pop();
    if (newCard) {
      const { swipe } = newCard;
      setHistory((current) =>
        current.filter((card) => {
          return card.id !== newCard.id;
        })
      );
      setResult((current) => ({ ...current, [swipe]: current[swipe] - 1 }));
      setCards((current) => [...current, newCard]);
    }
  };

  const { isOpen, onOpen, onClose } = useDisclosure();

  return (
    <>
      <Head>
        <title>ZEE BY RHB</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* <div className="my-4 flex items-center justify-center">
        <TotalSpend />
      </div>

      <div className="my-4 flex items-center justify-center">
        <h1 className="font-bold text-[32px] leading-9 text-center">
          RM 120.50
        </h1>
      </div> */}

      <div className="flex flex-col justify-center items-center w-full h-[130vw] gradient">
        <AnimatePresence>
          {cards.map((card, index) => (
            <TinderCard
              key={card.name}
              active={index === activeIndex}
              removeCard={removeCard}
              card={card}
            />
          ))}
        </AnimatePresence>
      </div>

      {cards.length === 0 ? (
        <div className="my-4 flex items-center justify-center">
          <Modal isOpen={true} onClose={onClose}>
            <ModalOverlay />
            <ModalContent>
              <ModalHeader></ModalHeader>
              <Link href="/report/summaryOne">
                <ModalCloseButton />
              </Link>              
              <ModalBody>
                <div className="my-4 flex items-center justify-center">
                  <h1 className="font-bold text-[#5452C6] text-5xl leading-[58px] text-center">
                    Nice laa
                  </h1>
                </div>

                <div className="my-4 flex items-center justify-center">
                  <span className="text-8xl">🎇</span>
                </div>

                <div className="my-4 flex items-center justify-center">
                  <h1 className="font-normal text-[#5452C6] text-lg leading-[22px] text-center">
                    You finished categorizing your expenses. Let’s see how you
                    did{" "}
                  </h1>
                </div>
              </ModalBody>

              <ModalFooter>
                {/* <Button variant="ghost">I’m afraid but sure</Button> */}
                <button
                  type="button"
                  class="text-white bg-[#6001FF] hover:bg-blue-800 focus:outline-none focus:ring-4 focus:ring-blue-300 font-medium rounded-[20px] text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
                >
                  <Link href="/report/summaryOne">I’m afraid but sure</Link>
                </button>
              </ModalFooter>
            </ModalContent>
          </Modal>
        </div>
      ) : null}

      <div className="mx-5">
      <div className="grid grid-cols-3 gap-x-5 gap-y-4">
        <div
          href="#"
          className="w-[120px] p-6 bg-[#E6F7FE] border border-gray-200 rounded-xl shadow-md hover:bg-gray-100" onClick={clickToRemove}
        >
          <div className="flex flex-col text-center">
            <Emoji label="Needs" emoji="📦" />
            <span className="my-2" />
            <p className="font-normal text-sm leading-3 text-[#036B9C]">
              Needs
            </p>
          </div>
        </div>

        <div
          href="#"
          className="w-[120px] p-6 bg-[#E6F7FE] border border-gray-200 rounded-xl shadow-md hover:bg-gray-100" onClick={clickToRemove}
        >
          <div className="flex flex-col text-center">
            <Emoji label="Eat Out" emoji="🍔" />
            <span className="my-2" />
            <p className="font-normal text-sm leading-3 text-[#036B9C]">
              Eat Out
            </p>
          </div>
        </div>

        <div
          href="#"
          className="w-[120px] p-6 bg-[#E6F7FE] border border-gray-200 rounded-xl shadow-md hover:bg-gray-100" onClick={clickToRemove}
        >
          <div className="flex flex-col text-center">
            <Emoji label="Transport" emoji="🚗" />
            <span className="my-2" />
            <p className="font-normal text-sm leading-3 text-[#036B9C]">
              Transport
            </p>
          </div>
        </div>

        <div
          href="#"
          className="w-[120px] p-6 bg-[#E6F7FE] border border-gray-200 rounded-xl shadow-md hover:bg-gray-100" onClick={clickToRemove}
        >
          <div className="flex flex-col text-center">
            <Emoji label="Shopping" emoji="🛍️" />
            <span className="my-2" />
            <p className="font-normal text-sm leading-3 text-[#036B9C]">
              Shopping
            </p>
          </div>
        </div>

        <div
          href="#"
          className="w-[120px] p-6 bg-[#E6F7FE] border border-gray-200 rounded-xl shadow-md hover:bg-gray-100" onClick={clickToRemove}
        >
          <div className="flex flex-col text-center">
            <Emoji label="Oooops" emoji="🫣" />
            <span className="my-2" />
            <p className="font-normal text-sm leading-3 text-[#036B9C]">
              Oooops
            </p>
          </div>
        </div>

        <div
          href="#"
          className="w-[120px] p-6 bg-[#E6F7FE] border border-gray-200 rounded-xl shadow-md hover:bg-gray-100" onClick={clickToRemove}
        >
          <div className="flex flex-col text-center">
            <Emoji label="Entertainment" emoji="🛝" />
            <span className="my-2" />
            <p className="font-normal text-sm leading-3 text-[#036B9C]">
              Entertainment
            </p>
          </div>
        </div>
      </div>
      </div>

      <div className="my-4 flex items-center justify-center">
        <OtherCategories />
      </div>
    </>
  );
}

const Emoji = ({ emoji, label }) => {
  return (
    <span role="img" aria-label={label} className="text-3xl">
      {emoji}
    </span>
  );
};

export default CardExpenses;
